// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1Profile v1 profile
// swagger:model v1Profile
type V1Profile struct {

	// custodial sentences
	CustodialSentences []*ProfileCustodialSentence `json:"custodial_sentences"`

	// date of birth
	DateOfBirth *InternalwktDate `json:"date_of_birth,omitempty"`

	// dependants
	Dependants int32 `json:"dependants,omitempty"`

	// email address
	EmailAddress string `json:"email_address,omitempty"`

	// forenames
	Forenames string `json:"forenames,omitempty"`

	// Has the customer had any criminal convictions for theft, fraud or dishonesty?
	HasCriminalConvictions bool `json:"has_criminal_convictions,omitempty"`

	// The unique profile identifier.
	// @OutputOnly
	ID string `json:"id,omitempty"`

	// marital status
	MaritalStatus InternalwktMaritalStatus `json:"marital_status,omitempty"`

	// The full name for the customer profile resource.
	// @OutputOnly
	Name string `json:"name,omitempty"`

	// national insurance number
	NationalInsuranceNumber string `json:"national_insurance_number,omitempty"`

	// A ISO-3166 country code relating to a nationality.
	// See more: https://en.wikipedia.org/wiki/ISO_3166-1
	Nationality string `json:"nationality,omitempty"`

	// nationality united kingdom since birth
	NationalityUnitedKingdomSinceBirth bool `json:"nationality_united_kingdom_since_birth,omitempty"`

	// partner name
	PartnerName string `json:"partner_name,omitempty"`

	// phone number home
	PhoneNumberHome string `json:"phone_number_home,omitempty"`

	// phone number mobile
	PhoneNumberMobile string `json:"phone_number_mobile,omitempty"`

	// phone number work
	PhoneNumberWork string `json:"phone_number_work,omitempty"`

	// surname
	Surname string `json:"surname,omitempty"`

	// The total amount of full months lived in the U.K for example 4
	// years 6 months would be 54.
	TimeInUnitedKingdomMonths int32 `json:"time_in_united_kingdom_months,omitempty"`

	// title
	Title InternalwktNameTitle `json:"title,omitempty"`
}

// Validate validates this v1 profile
func (m *V1Profile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustodialSentences(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateOfBirth(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaritalStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1Profile) validateCustodialSentences(formats strfmt.Registry) error {

	if swag.IsZero(m.CustodialSentences) { // not required
		return nil
	}

	for i := 0; i < len(m.CustodialSentences); i++ {
		if swag.IsZero(m.CustodialSentences[i]) { // not required
			continue
		}

		if m.CustodialSentences[i] != nil {
			if err := m.CustodialSentences[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("custodial_sentences" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1Profile) validateDateOfBirth(formats strfmt.Registry) error {

	if swag.IsZero(m.DateOfBirth) { // not required
		return nil
	}

	if m.DateOfBirth != nil {
		if err := m.DateOfBirth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("date_of_birth")
			}
			return err
		}
	}

	return nil
}

func (m *V1Profile) validateMaritalStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.MaritalStatus) { // not required
		return nil
	}

	if err := m.MaritalStatus.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("marital_status")
		}
		return err
	}

	return nil
}

func (m *V1Profile) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(m.Title) { // not required
		return nil
	}

	if err := m.Title.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("title")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1Profile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Profile) UnmarshalBinary(b []byte) error {
	var res V1Profile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
