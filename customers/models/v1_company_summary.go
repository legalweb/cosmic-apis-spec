// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1CompanySummary v1 company summary
// swagger:model v1CompanySummary
type V1CompanySummary struct {

	// The last time the credit score was checked.
	// Format: date-time
	CreditScoreLastChecked strfmt.DateTime `json:"credit_score_last_checked,omitempty"`

	// The company credit score when last checked, this value is out of 999.
	CreditScoreValue int64 `json:"credit_score_value,omitempty"`

	// The label of the company for example "Legalwebb UK Ltd"
	Label string `json:"label,omitempty"`

	// The full name of the company for example:
	// companies.cosmicapis.com/organisations/{organisationId}/companies/{companyId}
	Name string `json:"name,omitempty"`
}

// Validate validates this v1 company summary
func (m *V1CompanySummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreditScoreLastChecked(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1CompanySummary) validateCreditScoreLastChecked(formats strfmt.Registry) error {

	if swag.IsZero(m.CreditScoreLastChecked) { // not required
		return nil
	}

	if err := validate.FormatOf("credit_score_last_checked", "body", "date-time", m.CreditScoreLastChecked.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1CompanySummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1CompanySummary) UnmarshalBinary(b []byte) error {
	var res V1CompanySummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
