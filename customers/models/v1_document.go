// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1Document v1 document
// swagger:model v1Document
type V1Document struct {

	// @OutputOnly
	ID string `json:"id,omitempty"`

	// The name of the file.
	Label string `json:"label,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// The parent collection id.
	// Example:
	// - collections/{collectionId}
	Parent string `json:"parent,omitempty"`

	// Size in kilobytes rounded up.
	SizeKilobytes int32 `json:"size_kilobytes,omitempty"`

	// uploaded
	// Format: date-time
	Uploaded strfmt.DateTime `json:"uploaded,omitempty"`
}

// Validate validates this v1 document
func (m *V1Document) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUploaded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1Document) validateUploaded(formats strfmt.Registry) error {

	if swag.IsZero(m.Uploaded) { // not required
		return nil
	}

	if err := validate.FormatOf("uploaded", "body", "date-time", m.Uploaded.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1Document) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Document) UnmarshalBinary(b []byte) error {
	var res V1Document
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
