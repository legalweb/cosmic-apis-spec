// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ApplicationSummary v1 application summary
// swagger:model v1ApplicationSummary
type V1ApplicationSummary struct {

	// The name of the primary adviser who is handling the application.
	Adviser string `json:"adviser,omitempty"`

	// The application identifier a UUID.
	AppID string `json:"app_id,omitempty"`

	// The application type for example "commercial-mortgage".
	AppType string `json:"app_type,omitempty"`

	// The time the application was created.
	// Format: date-time
	Created strfmt.DateTime `json:"created,omitempty"`

	// Friendly name for the application for example "£175,000 Commercial mortgage @ 75% LTV"
	// or "£35,000 Business Loan".
	Label string `json:"label,omitempty"`

	// The full name of the application for example:
	// applications.cosmicapis.com/organisations/{organisationId}/commercial-mortgage/{applicationId}
	Name string `json:"name,omitempty"`

	// The current status of the application in a human friendly way.
	Status string `json:"status,omitempty"`
}

// Validate validates this v1 application summary
func (m *V1ApplicationSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ApplicationSummary) validateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.Created) { // not required
		return nil
	}

	if err := validate.FormatOf("created", "body", "date-time", m.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1ApplicationSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ApplicationSummary) UnmarshalBinary(b []byte) error {
	var res V1ApplicationSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
