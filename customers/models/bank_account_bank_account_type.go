// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BankAccountBankAccountType bank account bank account type
// swagger:model BankAccountBankAccountType
type BankAccountBankAccountType string

const (

	// BankAccountBankAccountTypeBANKACCOUNTTYPECURRENTACCOUNT captures enum value "BANK_ACCOUNT_TYPE_CURRENT_ACCOUNT"
	BankAccountBankAccountTypeBANKACCOUNTTYPECURRENTACCOUNT BankAccountBankAccountType = "BANK_ACCOUNT_TYPE_CURRENT_ACCOUNT"

	// BankAccountBankAccountTypeBANKACCOUNTTYPESAVINGSACCOUNT captures enum value "BANK_ACCOUNT_TYPE_SAVINGS_ACCOUNT"
	BankAccountBankAccountTypeBANKACCOUNTTYPESAVINGSACCOUNT BankAccountBankAccountType = "BANK_ACCOUNT_TYPE_SAVINGS_ACCOUNT"
)

// for schema
var bankAccountBankAccountTypeEnum []interface{}

func init() {
	var res []BankAccountBankAccountType
	if err := json.Unmarshal([]byte(`["BANK_ACCOUNT_TYPE_CURRENT_ACCOUNT","BANK_ACCOUNT_TYPE_SAVINGS_ACCOUNT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bankAccountBankAccountTypeEnum = append(bankAccountBankAccountTypeEnum, v)
	}
}

func (m BankAccountBankAccountType) validateBankAccountBankAccountTypeEnum(path, location string, value BankAccountBankAccountType) error {
	if err := validate.Enum(path, location, value, bankAccountBankAccountTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this bank account bank account type
func (m BankAccountBankAccountType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBankAccountBankAccountTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
