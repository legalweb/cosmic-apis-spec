// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GenericGenericType generic generic type
// swagger:model GenericGenericType
type GenericGenericType string

const (

	// GenericGenericTypeASSETGENERICTYPETRANSPORTATION captures enum value "ASSET_GENERIC_TYPE_TRANSPORTATION"
	GenericGenericTypeASSETGENERICTYPETRANSPORTATION GenericGenericType = "ASSET_GENERIC_TYPE_TRANSPORTATION"

	// GenericGenericTypeASSETGENERICTYPELOGISTICSANDHAULAGE captures enum value "ASSET_GENERIC_TYPE_LOGISTICS_AND_HAULAGE"
	GenericGenericTypeASSETGENERICTYPELOGISTICSANDHAULAGE GenericGenericType = "ASSET_GENERIC_TYPE_LOGISTICS_AND_HAULAGE"

	// GenericGenericTypeASSETGENERICTYPEAGRICULTURALANDGROUNDSEQUIP captures enum value "ASSET_GENERIC_TYPE_AGRICULTURAL_AND_GROUNDS_EQUIP"
	GenericGenericTypeASSETGENERICTYPEAGRICULTURALANDGROUNDSEQUIP GenericGenericType = "ASSET_GENERIC_TYPE_AGRICULTURAL_AND_GROUNDS_EQUIP"

	// GenericGenericTypeASSETGENERICTYPEHOSPITALITYANDLEISUREEQUIP captures enum value "ASSET_GENERIC_TYPE_HOSPITALITY_AND_LEISURE_EQUIP"
	GenericGenericTypeASSETGENERICTYPEHOSPITALITYANDLEISUREEQUIP GenericGenericType = "ASSET_GENERIC_TYPE_HOSPITALITY_AND_LEISURE_EQUIP"

	// GenericGenericTypeASSETGENERICTYPETECHANDSECURITYEQUIP captures enum value "ASSET_GENERIC_TYPE_TECH_AND_SECURITY_EQUIP"
	GenericGenericTypeASSETGENERICTYPETECHANDSECURITYEQUIP GenericGenericType = "ASSET_GENERIC_TYPE_TECH_AND_SECURITY_EQUIP"

	// GenericGenericTypeASSETGENERICTYPEPLANTEQUIP captures enum value "ASSET_GENERIC_TYPE_PLANT_EQUIP"
	GenericGenericTypeASSETGENERICTYPEPLANTEQUIP GenericGenericType = "ASSET_GENERIC_TYPE_PLANT_EQUIP"

	// GenericGenericTypeASSETGENERICTYPECONSTRUCTIONEQUIP captures enum value "ASSET_GENERIC_TYPE_CONSTRUCTION_EQUIP"
	GenericGenericTypeASSETGENERICTYPECONSTRUCTIONEQUIP GenericGenericType = "ASSET_GENERIC_TYPE_CONSTRUCTION_EQUIP"

	// GenericGenericTypeASSETGENERICTYPEFURNITURE captures enum value "ASSET_GENERIC_TYPE_FURNITURE"
	GenericGenericTypeASSETGENERICTYPEFURNITURE GenericGenericType = "ASSET_GENERIC_TYPE_FURNITURE"

	// GenericGenericTypeASSETGENERICTYPEWASTE captures enum value "ASSET_GENERIC_TYPE_WASTE"
	GenericGenericTypeASSETGENERICTYPEWASTE GenericGenericType = "ASSET_GENERIC_TYPE_WASTE"

	// GenericGenericTypeASSETGENERICTYPEENERGY captures enum value "ASSET_GENERIC_TYPE_ENERGY"
	GenericGenericTypeASSETGENERICTYPEENERGY GenericGenericType = "ASSET_GENERIC_TYPE_ENERGY"
)

// for schema
var genericGenericTypeEnum []interface{}

func init() {
	var res []GenericGenericType
	if err := json.Unmarshal([]byte(`["ASSET_GENERIC_TYPE_TRANSPORTATION","ASSET_GENERIC_TYPE_LOGISTICS_AND_HAULAGE","ASSET_GENERIC_TYPE_AGRICULTURAL_AND_GROUNDS_EQUIP","ASSET_GENERIC_TYPE_HOSPITALITY_AND_LEISURE_EQUIP","ASSET_GENERIC_TYPE_TECH_AND_SECURITY_EQUIP","ASSET_GENERIC_TYPE_PLANT_EQUIP","ASSET_GENERIC_TYPE_CONSTRUCTION_EQUIP","ASSET_GENERIC_TYPE_FURNITURE","ASSET_GENERIC_TYPE_WASTE","ASSET_GENERIC_TYPE_ENERGY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		genericGenericTypeEnum = append(genericGenericTypeEnum, v)
	}
}

func (m GenericGenericType) validateGenericGenericTypeEnum(path, location string, value GenericGenericType) error {
	if err := validate.Enum(path, location, value, genericGenericTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this generic generic type
func (m GenericGenericType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGenericGenericTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
