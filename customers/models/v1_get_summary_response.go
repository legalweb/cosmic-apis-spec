// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1GetSummaryResponse v1 get summary response
// swagger:model v1GetSummaryResponse
type V1GetSummaryResponse struct {

	// The last 5 applications.
	Applications []*V1ApplicationSummary `json:"applications"`

	// The total count of assets the customer has.
	AssetCount int64 `json:"asset_count,omitempty"`

	// All the companies the customer is linked too.
	Companies []*V1CompanySummary `json:"companies"`

	// Has the customer gone through identity verification?
	IdentityIsVerified bool `json:"identity_is_verified,omitempty"`

	// The total number of accounts packages the customer has linked.
	LinkedAccountsPackages int64 `json:"linked_accounts_packages,omitempty"`

	// The total number of bank accounts the customer has linked.
	LinkedBankAccounts int64 `json:"linked_bank_accounts,omitempty"`

	// The total net-worth of the customer.
	NetWorth *GoogletypeMoney `json:"net_worth,omitempty"`
}

// Validate validates this v1 get summary response
func (m *V1GetSummaryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApplications(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompanies(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetWorth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1GetSummaryResponse) validateApplications(formats strfmt.Registry) error {

	if swag.IsZero(m.Applications) { // not required
		return nil
	}

	for i := 0; i < len(m.Applications); i++ {
		if swag.IsZero(m.Applications[i]) { // not required
			continue
		}

		if m.Applications[i] != nil {
			if err := m.Applications[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("applications" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1GetSummaryResponse) validateCompanies(formats strfmt.Registry) error {

	if swag.IsZero(m.Companies) { // not required
		return nil
	}

	for i := 0; i < len(m.Companies); i++ {
		if swag.IsZero(m.Companies[i]) { // not required
			continue
		}

		if m.Companies[i] != nil {
			if err := m.Companies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("companies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1GetSummaryResponse) validateNetWorth(formats strfmt.Registry) error {

	if swag.IsZero(m.NetWorth) { // not required
		return nil
	}

	if m.NetWorth != nil {
		if err := m.NetWorth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("net_worth")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1GetSummaryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1GetSummaryResponse) UnmarshalBinary(b []byte) error {
	var res V1GetSummaryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
